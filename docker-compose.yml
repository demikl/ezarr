---
version: "3.1"
networks:
  host-facing:
    driver: bridge
    internal: false
  internet-access:
    driver: bridge
    internal: false
  lb-upstreams:
    driver: bridge
    internal: true
  wireguard-out:
    driver: bridge
    internal: false
  
services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - lb-upstreams
      - internet-access
    environment:
      - PUID=13001
      - PGID=13000
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /data-hdd/ezarr/config/sonarr-config:/config
      - /data-hdd/ezarr/data:/data-hdd
      - /mnt/nfs/nasbox/Media/stackarr:/data
    expose:
      - 8989
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.lan`)"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - lb-upstreams
      - internet-access
    environment:
      - PUID=13002
      - PGID=13000
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /data-hdd/ezarr/config/radarr-config:/config
      - /data-hdd/ezarr/data:/data-hdd
      - /mnt/nfs/nasbox/Media/stackarr:/data
    expose:
      - 7878
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.lan`)"

  # lidarr:
  #   image: lscr.io/linuxserver/lidarr:latest
  #   container_name: lidarr
  #   networks:
  #     - lb-upstreams
  #     - internet-access
  #   environment:
  #     - PUID=13003
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=Europe/Paris
  #   volumes:
  #     - /data/ezarr/config/lidarr-config:/config
  #     - /var/lib/vz/mounts/nasbox/Media/stackarr:/data
  #   expose:
  #     - 8686
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.lidarr.rule=Host(`lidarr.lan`)"

  # readarr:
  #   image: lscr.io/linuxserver/readarr:develop
  #   container_name: readarr
  #   networks:
  #     - lb-upstreams
  #     - internet-access
  #   environment:
  #     - PUID=13004
  #     - PGID=13000
  #     - UMASK=002
  #     - TZ=Europe/Paris
  #   volumes:
  #     - /data/ezarr/config/readarr-config:/config
  #     - /var/lib/vz/mounts/nasbox/Media/stackarr:/data
  #   expose:
  #     - 8787
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.readarr.rule=Host(`readarr.lan`)"

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    networks:
      - lb-upstreams
      - internet-access
    environment:
      - PUID=13006
      - PGID=13000
      - UMASK=002
      - TZ=Europe/Paris
    volumes:
      - /data-hdd/ezarr/config/prowlarr-config:/config
    expose:
      - 9696
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.lan`)"
      - "traefik.http.services.prowlarr-ezarr.loadbalancer.server.port=9696"

  flaresolverr: 
    image: ghcr.io/flaresolverr/flaresolverr:latest 
    container_name: flaresolverr 
    networks: 
      - lb-upstreams 
      - internet-access
    expose:
      - 8191
    environment:
      - PUID=13016
      - PGID=13000
      - TZ=Europe/Paris
      - LOG_LEVEL=${LOG_LEVEL:-info} 
      - LOG_HTML=${LOG_HTML:-false} 
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none} 
    restart: unless-stopped 

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:wireguard-my
    depends_on:
      - wireguard-my
    environment:
      - PUID=13007
      - PGID=13000
      - UMASK=002
      - TZ=Europe/Paris
      - WEBUI_PORT=8080
    volumes:
      - /data-hdd/ezarr/config/qbittorrent-config:/config
      - /data-hdd/ezarr/data/torrents:/data-hdd/torrents
      - /mnt/nfs/nasbox/Media/stackarr/torrents:/data/torrents
      - /data-hdd/ezarr/vpn_health_check.sh:/vpn_health_check.sh
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/bin/bash", "/vpn_health_check.sh"]
      interval: 30s
      retries: 3
      timeout: 10s

  wireguard-my:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard-my
    networks:
      - wireguard-out
      - lb-upstreams  # car le port du webui de qbittorrent va etre exposé via le conteneur wireguard-my
    restart: unless-stopped
    volumes:
      - /data-hdd/ezarr/config/wg-config:/config
      - '/lib/modules:/lib/modules:ro'
      - /data-hdd/ezarr/vpn_health_check.sh:/vpn_health_check.sh
    environment:
      - PUID=13015
      - PGID=13000
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    healthcheck:
      test: ["CMD", "/bin/bash", "/vpn_health_check.sh"]
      interval: 30s
      retries: 3
      timeout: 10s
    ports:
      - 6081:6081
      - 7881:6881
      - 7881:6881/udp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.lan`)"
      - "traefik.http.services.qbittorrent-ezarr.loadbalancer.server.port=8080"

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    networks:
      - lb-upstreams
      - host-facing  # pour joindre les applis non présentes dans cette stack docker-compose
    volumes:
      - /data-hdd/ezarr/config/heimdall-config:/config
    environment:
      - PUID=13014
      - PGID=13000
      - TZ=Europe/Paris
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.lan`)"

  lb:
    image: traefik:v2.11
    ports:
      - 80:80
      - 443:443
      - 8088:8080
    networks:
      - host-facing
      - lb-upstreams
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data-hdd/ezarr/traefik.yaml:/etc/traefik/traefik.yaml
      - /data-hdd/ezarr/traefik-acme.json:/etc/traefik/acme.json

  # whoami:
  #   image: traefik/whoami
  #   networks:
  #     - lb-upstreams
  #   expose:
  #     - 80
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.lan`)"
  #     - "traefik.http.services.whoami-ezarr.loadbalancer.server.port=80"

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=13010
      - PGID=13000
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - /data-hdd/ezarr/config/plex-config:/config
      - /data-hdd/ezarr/data/media:/media-hdd:ro
      - /mnt/nfs/nasbox/Media:/media-nasbox:ro
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    depends_on:
      - plex
    networks:
      - lb-upstreams
      - internet-access
    environment:
      - PUID=${UID}
      - PGID=13000
      - TZ=${TIMEZONE}
    volumes:
      - /data-hdd/ezarr/config/tautulli-config:/config
    expose:
      - 8181
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.lan`)"
      - "traefik.http.services.tautulli-ezarr.loadbalancer.server.port=8181"
